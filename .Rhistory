install.packages("RCurl")
install.packages("rjson")
help.start()
x <- rnorm(50)
y <- rnorm(x)
plot(x,y)
ls()
rm(x,y)
ls()
x<-1:20
w <- 1 + sqrt(x)/2
dummy <- data.frame(x=x,y=x+rnorm(x)*w)
fm <- lm(y~x,data=dummy,weight=1/w^2)
summary(fm)
fm1 <- lm (y~x, data=dummy,weight=1/w^2)
summary(fm1)
attach(dummy)
lrf<-lowess(x,y)
plot(x,y)
lines(x,lrf$y)
abline(0,1,lty=3)
abline(coef(fm))
abline(coef(fm1),col="red")
detach()
plot(fitted(fm),resid(fm),xlab="Fitted values",ylab="Residuals",main="Residuals vs Fitted")
qqnorm(resid(fm),main="Residuals Rankit Plot")
View(dummy)
rm(fm,fm1,lrf,x,dummy)
rm(w)
filepath <- system.files("data","morley.tab",package="datasets")
x <- seq(-pi,pi,len=50)
y <- x
f <- outer(x,y,function(x,y)cos(y)/(1+x^2))
oldpar <- par(no.readonly = TRUE)
par(pty="s")
contour(x,y,f)
contour(x,y,f nlevels=15, add=TRUE)
contour(x,y,f, nlevels=15, add=TRUE)
fa <- (t-t(f))/2
fa <- (f-t(f))/2
contour(x,y,fa,nlevels=15)
par(oldpar)
image(x,y,f)
image(x,y,fa)
objects();rm(x,y,f,fa)
th<-seq(-pi,pi,len=100)
z<-exp(li*th)
z<-exp(1i*th)
par(pty="s")
plot(z,type="1")
plot(z,type="l")
library()
search()
library()
source("./RGoogleAnalytics.R")
require("RGoogleAnalytics")
query <- QueryBuilder()
access_token <- query$authorize()
"access_token": "ya29.HgBRaJ-uLknJCR4AAADxj2iaXBbajyBLDM_6Da11MV6KU-R5V99EOB9nNTv-Sw",
"token_type": "Bearer",
"expires_in": 3600,
"refresh_token": "1/1vU0zALFkGYrwRUvfhuUWHuZqpaXi23w8dI9ihRRAxM"
}
"access_token": "ya29.HgBRaJ-uLknJCR4AAADxj2iaXBbajyBLDM_6Da11MV6KU-R5V99EOB9nNTv-Sw"
code=4%2F3J9_eXfa-ZaPdEQB3RswEuI-yAOa.AqcMlvh_rhkdOl05ti8ZT3ZJzUxLjAI&redirect_uri=https%3A%2F%2Fdevelopers.google.com%2Foauthplayground&client_id=407408718192.apps.googleusercontent.com&scope=&client_secret=************&grant_type=authorization_code
"access_token": "ya29.HgBRaJ-uLknJCR4AAADxj2iaXBbajyBLDM_6Da11MV6KU-R5V99EOB9nNTv-Sw",
"token_type": "Bearer",
"expires_in": 3600,
"refresh_token": "1/1vU0zALFkGYrwRUvfhuUWHuZqpaXi23w8dI9ihRRAxM"
query <- QueryBuilder()
access_token <- query$authorize()
conf <- Configuration()
ga.account <- conf$GetAccounts()
ga.account
ga.webProperty <- conf$GetWebProperty()
ga.webProperty
ga.webProfile <- conf$GetWebProfile(ga.account$id[1],ga.webProperty$id[2])
ga.webProfile
ga.goals <- conf$GetGoals()
ga <- RGoogleAnalytics()
ga.profiles <- ga$GetProfileData(access_token)
ga.profiles
profile <- ga.profiles$id[1]
startdate <- "2012-12-18"
enddate <- "2013-09-28"
dimension <- "ga:date,ga:source,ga:pageTitle,ga:pagePath"
metric <- "ga:visits"
ga.segments <- conf$GetSegments()
a <- available.packages()
install.packages("slidify")
install.packages("ggplot2")
install.packages("slidify")
source("http://bioconductor.org/biocLite.R")
biocLite()
library(ggplot2)
search()
getwd()
dir()
1/0
1/Inf
0/0
x <- 1
print(x)
x
msg <- "hello"
print(msg)
msg
x <-c(0.5,0.6)
x
x <-9:29
x
x <- vector("numeric", lenght 10)
x <- vector("numeric", lenght=10)
x <- vector("numeric", length=10)
x
library(rtools)
install.packages("rtools")
install.packages("RPostgreSQL")
install.packages(c("rjson", "yaml"))
library 'RPostgreSQL'
library RPostgreSQL
drv <- dbDriver("PostgreSQL")
library()
help load
load?
load
library (RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname="PT4",host="localhost",port=1234,user="postgres",password="ajrarn", )
dbConnect()
?dbConnect()
help(dbConnect())
help(dbConnect)
dbListConnections(drv)
con <- dbConnect(drv, dbname="tempdb")
con <- dbConnect(drv,dbname="PT4",user="postgres",password="ajrarn")
dbListConnections(drv)
dbListTables(con)
myTable <- dbGetQuery(con,"SELECT * FROM tourney_hand_player_statistics
WHERE id_player=6")
View(myTable)
help(kmeans)
?as.numric
?as.numeric
as.numeric(factor(6:10))
factor(6:10)
factor(6:10)
as.numeric(factor(6:10))
as.character(factor(5:10))
as.numeric(as.character(factor(5:10)))
as.numeric(c("-.1"," 2.7 ","B"))
?levels
as.numeric(levels(factor(5:10)))
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("RColorBrewer")
setwd("D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2")
source('~/.active-rstudio-document', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/Q1.R', echo=TRUE)
head(NEI)
head(SCC)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/Q1.R', echo=TRUE)
class(NEI$year)
?colsum
?col.sum
library(plyr)
yearDF <- aggregate(.~year, data=NEI, sum)
NEI$year <- as.factor(NEI$year)
View(NEI)
View(NEI)
str(NEI)
yearDF <- aggregate(.~year, data=NEI, sum)
yearEmissions <- aggregate(Emissions~year, data=NEI, sum)
View(yearEmissions)
hist(yearEmissions$Emissions)
boxplot(Emissions~year, data=NEI)
boxplot(Emissions~year, data=NEI)
plot(yearEmissions)
barplot(yearEmissions)
barplot(table(yearEmissions)
)
table(yearEmissions)
data.matrix(yearEmissions)
barplot(data.matrix(yearEmissions))
yearEmissions
?barplot
barplot(yearEmissions$Emissions, names.arg=yearEmissions$year)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/Q1.R', echo=TRUE)
library(RColorBrewer)
cols <- brewer.pal(4,"Pastel2")
pal <- colorRampPalette(cols)
barplot(yearEmissions$Emissions, names.arg=yearEmissions$year, col=pal(4))
barplot(yearEmissions$Emissions, names.arg=yearEmissions$year, col=pal(4), main="Total PM2.5 Emissions per year", xlab="Year",ylab="Emissions (in tons")
cols <- brewer.pal(4,"Spectral")
e
barplot(yearEmissions$Emissions, names.arg=yearEmissions$year, col=pal(4), main="Total PM2.5 Emissions per year", xlab="Year",ylab="Emissions (in tons")
cols <- brewer.pal(4,"Spectral")
pal <- colorRampPalette(cols)
barplot(yearEmissions$Emissions, names.arg=yearEmissions$year, col=pal(4), main="Total PM2.5 Emissions per year", xlab="Year",ylab="Emissions (in tons")
str(NEI)
BlatimoreNEI <- NEI[NEI$fips=="24510",]
barplot(yearEmissions$Emissions, names.arg=yearEmissionsBaltimore$year, col=pal(4), main="Total PM2.5 Emissions per year", xlab="Year",ylab="Emissions (in tons)")
yearEmissionsBaltimore <- aggregate(Emissions~year, data=BlatimoreNEI, sum)
## ploting the graph
cols <- brewer.pal(4,"Oranges")
pal <- colorRampPalette(cols)
barplot(yearEmissions$Emissions, names.arg=yearEmissionsBaltimore$year, col=pal(4), main="Total PM2.5 Emissions per year", xlab="Year",ylab="Emissions (in tons)")
yearEmissionsBaltimore <- aggregate(Emissions~year, data=BlatimoreNEI, sum)
## ploting the graph
cols <- brewer.pal(4,"Oranges")
pal <- colorRampPalette(cols)
barplot(yearEmissionsBaltimore$Emissions, names.arg=yearEmissionsBaltimore$year, col=pal(4), main="Total PM2.5 Emissions per year in Baltimore", xlab="Year",ylab="Emissions (in tons)")
?dev.copy
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot1.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot2.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(ggplot2)
yearEmissionsBaltimore <- aggregate(Emissions~year + type, data=BlatimoreNEI, sum)
yearEmissionsBaltimore
?qplot
qplot(Emissions, data = yearEmissionsBaltimore, facets = type ~.,geom=bar)
qplot(Emissions, data = yearEmissionsBaltimore, facets = type ~.,geom="bar")
qplot(x=year, y=Emissions, fill=variable, data=yearEmissionsBaltimore)
qplot(x=year, y=Emissions, fill=type, data=yearEmissionsBaltimore)
qplot(x=year, y=Emissions, fill=type, data=yearEmissionsBaltimore, geom="bar")
qplot(x=year, y=Emissions, fill=type, data=yearEmissionsBaltimore, geom="bar", stat="identity")
qplot(x=year, y=Emissions, fill=type, data=yearEmissionsBaltimore, geom="bar", stat="identity", position=dodge)
qplot(x=year, y=Emissions, fill=type, data=yearEmissionsBaltimore, geom="bar", stat="identity", position="dodge")
qplot(x=year, y=Emissions, fill=type, data=yearEmissionsBaltimore, geom="bar", stat="identity", position="dodge", main="Total PM2.5 Emission per year and type in Baltimore")
#NEI <- readRDS("data/summarySCC_PM25.rds")
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot3.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot1.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot2.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot3.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot3.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot3.R', echo=TRUE)
?theme
theme(axis.text.x=c("1999","2002","2005","2008"))
p<-barplot(yearEmissionsBaltimore$Emissions, names.arg=yearEmissionsBaltimore$year, col=pal(4), main="Total PM2.5 Emissions per year in Baltimore", xlab="Year",ylab="Emissions (in tons)")
p + theme(axis.text.x=c("1999","2002","2005","2008"))
str(SCC)
?level
?levels
levels(SCC$Data.Category)
levels(SCC$EI.Sector)
levels(SCC$Option.Group)
levels(SCC$Option.Set)
str(NEI)
?merge
newNEI <- merge(NEI,SCC)
?levels
grepl("Comb",levels(SCC$EI.Sector))
grepl("Comb",levels(SCC$EI.Sector)) | grepl("Coal",levels(SCC$EI.Sector))
grepl("Comb",levels(SCC$EI.Sector)) & grepl("Coal",levels(SCC$EI.Sector))
levels(SCC$EI.Sector)[grepl("Comb",levels(SCC$EI.Sector)) & grepl("Coal",levels(SCC$EI.Sector))]
completeNEI <- merge(NEI,SCC)
CombCoalFactors <- levels(SCC$EI.Sector)[grepl("Comb",levels(SCC$EI.Sector)) & grepl("Coal",levels(SCC$EI.Sector))]
CombCoal <- completeNEI[completeNEI$EI.Sector %in% CombCoalFactors,]
yearCombCoalEmissions <- aggregate(Emissions~year, data=CombCoal, sum)
yearCombCoalEmissions
cols <- brewer.pal(4,"Spectral")
pal <- colorRampPalette(cols)
barplot(yearCombCoalEmissions$Emissions, names.arg=yearCombCoalEmissions$year, col=pal(4), main="Total PM2.5 Emissions per year", xlab="Year",ylab="Emissions (in tons)")
## I don't like dev.copy because it can be buggy sometimes, so I'll just redraw the graph in a different device.
png("plot1.png", width=480 , height=480)
barplot(yearCombCoalEmissions$Emissions, names.arg=yearCombCoalEmissions$year, col=pal(4), main="Total PM2.5 Emissions per year", xlab="Year",ylab="Emissions (in tons)")
dev.off()
cols <- brewer.pal(4,"Oranges")
pal <- colorRampPalette(cols)
barplot(yearCombCoalEmissions$Emissions, names.arg=yearCombCoalEmissions$year, col=pal(4), main="Total PM2.5 Emissions per year", xlab="Year",ylab="Emissions (in tons)")
## I don't like dev.copy because it can be buggy sometimes, so I'll just redraw the graph in a different device.
png("plot1.png", width=480 , height=480)
barplot(yearCombCoalEmissions$Emissions, names.arg=yearCombCoalEmissions$year, col=pal(4), main="Total PM2.5 Emissions per year", xlab="Year",ylab="Emissions (in tons)")
dev.off()
levels(SCC$SCC.Level.One)
levels(SCC$SCC.Level.Two)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot3.R', echo=TRUE)
levels(SCC$EI.Sector)
completeNEIBaltimore <- completeNEI[completeNEI$fips=="24510"]
completeNEIBaltimore <- completeNEI[completeNEI$fips=="24510",]
MobileFactors <- levels(SCC$EI.Sector)[grepl("Mobile",levels(SCC$EI.Sector))]
MobileFactors
mobileBaltimore <- completeNEIBaltimore[completeNEIBaltimore$EI.Sector %in% mobileFactors,]
mobileFactors <- levels(SCC$EI.Sector)[grepl("Mobile",levels(SCC$EI.Sector))]
mobileBaltimore <- completeNEIBaltimore[completeNEIBaltimore$EI.Sector %in% mobileFactors,]
mobileBaltimorePerYear <- aggregate(Emissions~year, data=mobileBaltimore, sum)
cols <- brewer.pal(4,"Oranges")
pal <- colorRampPalette(cols)
cols <- brewer.pal(4,"Oranges")
pal <- colorRampPalette(cols)
barplot(mobileBaltimorePerYear$Emissions, names.arg=mobileBaltimorePerYear$year, col=pal(4), main="Total PM2.5 Emissions per year from mobile sources in Baltimore", xlab="Year",ylab="Emissions (in tons)")
## I don't like dev.copy because it can be buggy sometimes, so I'll just redraw the graph in a different device.
png("plot5.png", width=480 , height=480)
barplot(mobileBaltimorePerYear$Emissions, names.arg=mobileBaltimorePerYear$year, col=pal(4), main="Total PM2.5 Emissions per year from mobile sources in Baltimore", xlab="Year",ylab="Emissions (in tons)")
dev.off()
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/Plot4.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot5.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot3.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot2.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot1.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot3.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot6.R', echo=TRUE)
source('D:/Dev/Workspace/Data-Scientist/ExploratoryDataAnalysis/Course-Project-2/plot6.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
